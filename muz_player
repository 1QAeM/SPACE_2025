#include <stdio.h>
#include <stdlib.h>
#include <SDL2/SDL.h>
#include <SDL2/SDL_mixer.h>

int main(int argc, char *argv[]) {
    // Проверка аргументов командной строки
    if (argc < 2) {
        printf("Использование: %s <путь_к_mp3_файлу>\n", argv[0]);
        return 1;
    }

    // Инициализация SDL
    if (SDL_Init(SDL_INIT_AUDIO) < 0) {
        printf("Ошибка инициализации SDL: %s\n", SDL_GetError());
        return 1;
    }

    // Инициализация SDL_mixer
    if (Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, 2, 2048) < 0) {
        printf("Ошибка инициализации SDL_mixer: %s\n", Mix_GetError());
        SDL_Quit();
        return 1;
    }

    // Загрузка музыкального файла
    Mix_Music *music = Mix_LoadMUS(argv[1]);
    if (!music) {
        printf("Ошибка загрузки файла: %s\n", Mix_GetError());
        Mix_CloseAudio();
        SDL_Quit();
        return 1;
    }

    // Воспроизведение музыки
    if (Mix_PlayMusic(music, 1) == -1) {
        printf("Ошибка воспроизведения: %s\n", Mix_GetError());
    } else {
        printf("Воспроизведение... Нажмите Ctrl+C для выхода\n");
        
        // Основной цикл
        int running = 1;
        SDL_Event event;
        
        while (running) {
            while (SDL_PollEvent(&event)) {
                switch (event.type) {
                    case SDL_QUIT:
                        running = 0;
                        break;
                    case SDL_KEYDOWN:
                        if (event.key.keysym.sym == SDLK_SPACE) {
                            if (Mix_PausedMusic()) {
                                Mix_ResumeMusic();
                            } else {
                                Mix_PauseMusic();
                            }
                        }
                        break;
                }
            }
            
            // Проверка окончания воспроизведения
            if (!Mix_PlayingMusic()) {
                running = 0;
            }
            
            SDL_Delay(100); // Небольшая задержка для снижения нагрузки на CPU
        }
    }

    // Очистка ресурсов
    Mix_FreeMusic(music);
    Mix_CloseAudio();
    SDL_Quit();

    return 0;
}